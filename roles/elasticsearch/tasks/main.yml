---
- file: path=/uk8s/elasticsearch-cluster state=directory mode=0644
  name: ensure /uk8s/elasticsearch-cluster exist

- copy: src=service-account.yaml dest=/uk8s/elasticsearch-cluster/service-account.yaml mode=0644
  name: cp service-account.yaml

- copy: src=es-discovery-svc.yaml dest=/uk8s/elasticsearch-cluster/es-discovery-svc.yaml mode=0644
  name: cp es-discovery-svc.yaml

- copy: src=es-svc.yaml dest=/uk8s/elasticsearch-cluster/es-svc.yaml mode=0644 mode=0644
  name: cp es-svc.yaml

- template: src="es-client-dp.yaml.j2" dest="/uk8s/elasticsearch-cluster/es-client-dp.yaml"
  name: gen es-client-dp.yaml

- template: src="es-data-dp.yaml.j2" dest="/uk8s/elasticsearch-cluster/es-data-dp.yaml"
  name: gen es-data-dp.yaml

- template: src="es-master-dp.yaml.j2" dest="/uk8s/elasticsearch-cluster/es-master-dp.yaml"
  name: gen es-master-dp.yaml

- command: "kubectl apply -f {{item}}"
  args:
    chdir: /uk8s/elasticsearch-cluster
  with_items:
    - "service-account.yaml"
    - "es-discovery-svc.yaml"
    - "es-svc.yaml"
    - "es-master-dp.yaml"
  changed_when: false
  name: deploy master node

- shell: |
    kubectl get po --no-headers=true | grep es-master
  register: result
  until: "'Running' in result.stdout"
  changed_when: false
  retries: 1000
  delay: 60
  name: check master node up & running

- command: kubectl apply -f es-client-dp.yaml
  args:
    chdir: /uk8s/elasticsearch-cluster
  name: deploy client node

- shell: |
    kubectl get po --no-headers=true | grep es-client
  register: result
  until: "'Running' in result.stdout"
  changed_when: false
  retries: 1000
  delay: 20
  name: check client node up & running

- command: kubectl apply -f es-data-dp.yaml
  args:
    chdir: /uk8s/elasticsearch-cluster
  name: deploy data node

- shell: |
    kubectl get po --no-headers=true | grep es-data
  register: result
  until: "'Running' in result.stdout"
  changed_when: false
  retries: 1000
  delay: 20
  name: check data node up & running