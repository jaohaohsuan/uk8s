---
- set_fact:
    logs_template: "{{ lookup('template','logs-template.json.j2') }}"
    loglevel: "debug"

- shell: |
    which kubectl
  ignore_errors: yes
  register: shell_result

- shell: |
    kubectl get endpoints elasticsearch --no-headers 2>&1 \
    | grep -v "not found" \
    | awk '{print $2}' \
    | cut -d ',' -f 1
  register: k8s_result
  changed_when: false
  when: shell_result.rc == 0

- set_fact:
    es_address: "http://{{ k8s_result.stdout }}"
  when: shell_result.rc == 0

- uri: |
    url={{ es_address }}
    status_code=200
  register: api_result

- debug: var=api_result
  when: loglevel == 'debug'

- uri: |
    url={{ es_address }}/_template/tmeplate1
    method=PUT
    body_format=json
    HEADER_Content-Type=application/json
    body={{ logs_template }}
    status_code=200
  register: api_result
  name: "apply Index Template"

- uri: |
    url={{ es_address }}/stored-query
    method=HEAD
    status_code=200,404
  register: api_result
  name: HEAD stored-query index

- debug: msg="{{ lookup('template', 'stored-query.settings.json.j2') }}"

- uri: |
    url={{ es_address }}/stored-query
    method=PUT
    body_format=json
    HEADER_Content-Type=application/json
    body={{ lookup('file', 'stored-query.index.settings.json') }}
    status_code=200,201
  name: Create stored-query Index
  when: api_result.status == 404

- uri: |
    url={{ es_address }}/stored-query/_close
    method=POST
    status_code=200
  name: Close stored-query

- uri: |
    url={{ es_address }}/stored-query/_settings
    method=PUT
    body_format=json
    HEADER_Content-Type=application/json
    body={{ lookup('template', 'stored-query.settings.json.j2') }}
    status_code=200
  name: Update stored-query settings

- uri: |
    url={{ es_address }}/stored-query/_open
    method=POST
    status_code=200
  name: Open stored-query

- uri: |
    url={{ es_address }}/stored-query/_mapping/.percolator
    method=PUT
    body_format=json
    HEADER_Content-Type=application/json
    body={{ lookup('template','stored-query-percolator.properties.json.j2') }}
    status_code=200
  name: .percolator properties update

- uri: |
    url={{ es_address }}/stored-query/_mapping/{{ item.type }}
    method=PUT
    body_format=json
    HEADER_Content-Type=application/json
    body={{ lookup('template','stored-query-datasource.properties.json.j2') }}
    status_code=200
  with_items: "{{ inu_datasources }}"

- debug: var=api_result
  when: loglevel == 'debug'

